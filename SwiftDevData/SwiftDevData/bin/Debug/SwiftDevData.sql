/*
Deployment script for SwiftDevData_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SwiftDevData_1"
:setvar DefaultFilePrefix "SwiftDevData_1"
:setvar DefaultDataPath "C:\Users\DodoSerebro\AppData\Local\Microsoft\VisualStudio\SSDT\SwiftDevData\"
:setvar DefaultLogPath "C:\Users\DodoSerebro\AppData\Local\Microsoft\VisualStudio\SSDT\SwiftDevData\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Project]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Project] (
    [ProjectId]          INT        IDENTITY (1, 1) NOT NULL,
    [ProjectName]        NCHAR (20) NOT NULL,
    [ProjectDescription] TEXT       NOT NULL,
    [Company]            NCHAR (20) NOT NULL,
    [Methodology]        NCHAR (10) NOT NULL,
    [ProjectStart]       DATE       NOT NULL,
    [ProjectEnd]         DATE       NULL,
    PRIMARY KEY CLUSTERED ([ProjectId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Project])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Project] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Project] ([ProjectId], [ProjectName], [ProjectDescription], [Company], [Methodology], [ProjectStart], [ProjectEnd])
        SELECT   [ProjectId],
                 [ProjectName],
                 [ProjectDescription],
                 [Company],
                 [Methodology],
                 [ProjectStart],
                 [ProjectEnd]
        FROM     [dbo].[Project]
        ORDER BY [ProjectId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Project] OFF;
    END

DROP TABLE [dbo].[Project];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Project]', N'Project';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[User]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_User] (
    [UserId]         INT        IDENTITY (1, 1) NOT NULL,
    [Username]       NCHAR (30) NOT NULL,
    [Password]       NCHAR (20) NOT NULL,
    [FirstName]      NCHAR (20) NOT NULL,
    [LastName]       NCHAR (20) NOT NULL,
    [Role]           NCHAR (20) NOT NULL,
    [CurrentProject] INT        NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC),
    UNIQUE NONCLUSTERED ([Username] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[User])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] ON;
        INSERT INTO [dbo].[tmp_ms_xx_User] ([UserId], [Username], [Password], [FirstName], [LastName], [Role], [CurrentProject])
        SELECT   [UserId],
                 [Username],
                 [Password],
                 [FirstName],
                 [LastName],
                 [Role],
                 [CurrentProject]
        FROM     [dbo].[User]
        ORDER BY [UserId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_User] OFF;
    END

DROP TABLE [dbo].[User];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_User]', N'User';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserRole]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserRole] (
    [RoleId]   INT        IDENTITY (1, 1) NOT NULL,
    [UserRole] NCHAR (20) NOT NULL,
    PRIMARY KEY CLUSTERED ([RoleId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserRole])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserRole] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserRole] ([RoleId], [UserRole])
        SELECT   [RoleId],
                 [UserRole]
        FROM     [dbo].[UserRole]
        ORDER BY [RoleId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserRole] OFF;
    END

DROP TABLE [dbo].[UserRole];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserRole]', N'UserRole';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
MERGE INTO Methodology AS Target 
USING (VALUES 
        (1, 'DAD'), 
        (2, 'XP'), 
        (3, 'SCRUM'),
		(4, 'RUP')
) 
AS Source (MethodologyId, MethodologyName) 
ON Target.MethodologyId = Source.MethodologyId 
WHEN NOT MATCHED BY TARGET THEN 
INSERT (MethodologyName) 
VALUES (MethodologyName);
GO

GO
PRINT N'Update complete.';


GO
